{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","total","handleButton","val","setState","evaluate","className","this","value","React","Component","CalcButton","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAIMA,E,4MACJC,MAAQ,CACNC,MAAO,I,EAyBTC,aAAe,SAACC,GACF,MAARA,EACF,EAAKC,SAAS,CAACH,MAAO,KACL,MAARE,EACT,EAAKC,SAAS,CAAEH,MAAOI,YAAS,EAAKL,MAAMC,SAE3C,EAAKG,SAAS,CAACH,MAAO,EAAKD,MAAMC,MAAQE,K,uDAK3C,OACE,qBAAKG,UAAU,MAAf,SACE,qBAAKA,UAAU,UAAf,SAEE,sBAAKA,UAAU,YAAf,UACE,qBAAIA,UAAU,SAAd,eAA0BC,KAAKP,MAAMC,MAArC,QACA,sBAAKK,UAAU,YAAf,UACE,cAAC,EAAD,CAAYJ,aAAcK,KAAKL,aAAcM,MAAO,IACpD,cAAC,EAAD,CAAYN,aAAcK,KAAKL,aAAcM,MAAO,IACpD,cAAC,EAAD,CAAYN,aAAcK,KAAKL,aAAcM,MAAO,IACpD,cAAC,EAAD,CAAYN,aAAcK,KAAKL,aAAcM,MAAO,SAEtD,sBAAKF,UAAU,aAAf,UACE,cAAC,EAAD,CAAYJ,aAAcK,KAAKL,aAAcM,MAAO,IACpD,cAAC,EAAD,CAAYN,aAAcK,KAAKL,aAAcM,MAAO,IACpD,cAAC,EAAD,CAAYN,aAAcK,KAAKL,aAAcM,MAAO,IACpD,cAAC,EAAD,CAAYN,aAAcK,KAAKL,aAAcM,MAAO,SAEtD,sBAAKF,UAAU,YAAf,UACE,cAAC,EAAD,CAAYJ,aAAcK,KAAKL,aAAcM,MAAO,IACpD,cAAC,EAAD,CAAYN,aAAcK,KAAKL,aAAcM,MAAO,IACpD,cAAC,EAAD,CAAYN,aAAcK,KAAKL,aAAcM,MAAO,IACpD,cAAC,EAAD,CAAYN,aAAcK,KAAKL,aAAcM,MAAO,SAEtD,sBAAKF,UAAU,YAAf,UACE,cAAC,EAAD,CAAYJ,aAAcK,KAAKL,aAAcM,MAAO,IACpD,cAAC,EAAD,CAAYN,aAAcK,KAAKL,aAAcM,MAAO,MACpD,cAAC,EAAD,CAAYN,aAAcK,KAAKL,aAAcM,MAAO,MACpD,cAAC,EAAD,CAAYN,aAAcK,KAAKL,aAAcM,MAAO,oB,GAlEhDC,IAAMC,WA4ElBC,EAAa,SAAC,GAA2B,IAA1BT,EAAyB,EAAzBA,aAAcM,EAAW,EAAXA,MACjC,OACE,wBAAQF,UAAU,cAAcM,QAAS,kBAAMV,EAAaM,IAA5D,SAAqEA,KAM1DT,IC5EAc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.517e5d33.chunk.js","sourcesContent":["import './App.css';\nimport React from \"react\" ;  \nimport { evaluate } from \"mathjs\";\n\nclass App extends React.Component {\n  state = {\n    total: \"\",\n  };\n\n  /*increaseCount= () => {\n    this.setState({total: this.state.total + this.state.number});\n  }\n  decreaseCount= () => {\n    this.setState({total: this.state.total - this.state.number});\n  }\n  multiplyCount= () => {\n    this.setState({total: this.state.total * this.state.number});\n  }\n  divideCount= () => {\n    this.setState({total: this.state.total / this.state.number});\n  }\n  returnCount= () => {\n    this.setState({total: this.state.total });\n  }\n  clearCount= () => {\n    this.setState({total: \"0\"});\n  }\n\n  printNumber = () => {\n    this.setState({total: this.state.number + this.state.number});\n  }*/\n  handleButton = (val)  => {\n    if (val === \"C\") {\n      this.setState({total: \"\"});\n    } else if (val === \"=\") {\n      this.setState({ total: evaluate(this.state.total)});\n    } else {\n      this.setState({total: this.state.total + val});\n    }\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <div className=\"wrapper\">\n          \n          <div className=\"countHere\">\n            <h1 className=\"result\">  {this.state.total}  </h1>\n            <div className=\"first-row\">\n              <CalcButton handleButton={this.handleButton} value={7}/>  \n              <CalcButton handleButton={this.handleButton} value={8}/>  \n              <CalcButton handleButton={this.handleButton} value={9}/>  \n              <CalcButton handleButton={this.handleButton} value={\"C\"}/>  \n            </div>\n            <div className=\"second-row\">\n              <CalcButton handleButton={this.handleButton} value={4}/>   \n              <CalcButton handleButton={this.handleButton} value={5}/>   \n              <CalcButton handleButton={this.handleButton} value={6}/>   \n              <CalcButton handleButton={this.handleButton} value={\"*\"}/>   \n            </div>\n            <div className=\"third-row\">\n              <CalcButton handleButton={this.handleButton} value={1}/>   \n              <CalcButton handleButton={this.handleButton} value={2}/>   \n              <CalcButton handleButton={this.handleButton} value={3}/>   \n              <CalcButton handleButton={this.handleButton} value={\"/\"}/>\n            </div>\n            <div className=\"forth-row\">\n              <CalcButton handleButton={this.handleButton} value={0}/> \n              <CalcButton handleButton={this.handleButton} value={\"+\"}/> \n              <CalcButton handleButton={this.handleButton} value={\"-\"}/> \n              <CalcButton handleButton={this.handleButton} value={\"=\"}/>\n            </div>            \n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nconst CalcButton = ({handleButton, value}) => {\n  return (\n    <button className=\"all-buttons\" onClick={() => handleButton(value)}>{value}</button>\n  );\n};\n\n\n\nexport default App;\n\n/*\n// Calculator Code if you are interested\nimport React from \"react\";\nimport { evaluate } from \"math.js\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    total: \"\",\n    buttons: [\n      \"7\",\n      \"8\",\n      \"9\",\n      \"C\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"*\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"/\",\n      \"+\",\n      \"0\",\n      \"-\",\n      \"=\",\n    ],\n  };\n  handleButton = (val) => {\n    if (val === \"C\") {\n      this.setState({ total: \"\" });\n    } else if (val === \"=\") {\n      this.setState({ total: evaluate(this.state.total) });\n    } else {\n      this.setState({ total: this.state.total + val });\n    }\n  };\n  render() {\n    return (\n      <div className=\"calculator-wrapper\">\n        <h1 className=\"screen\">{this.state.total}</h1>\n        <div className=\"buttons-group\">\n          {this.state.buttons.map((item, index) => {\n            return (\n              <CalcButton\n                key={index}\n                handleButton={this.handleButton}\n                value={item}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\nconst CalcButton = ({ handleButton, value }) => {\n  return (\n  <button onClick={() => handleButton(value)}>{value}</button>)\n};\nexport default App;*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}